from graphviz import Digraph
"""
 * File:     
 *     treeBuilder.py
 *
 * Purpose:
 *     Generate figures of the automatas generated by main.cpp
 *
 * Input:
 *      The textfiles generated by main.cpp
 *
 *      (
 *           "thompson.txt"
 *           "afd.txt"
 *           "afdirect.txt"
 *           "afdmini.txt"
 *           "afdirectmini.txt"
 *       )
 * Output:
 *     Figures of the five automatas
 *  
 *       (
 *           "thompson.gv.pdf"
 *           "afd.gv.pdf"
 *           "afdirect.gv.pdf"
 *           "afdmini.gv.pdf"
 *           "afdirectmini.gv.pdf"
 *       )   
 * 
 * Usage:
 *    python treeBuilder
 *
 * Dependencies:
 *    graphviz, install using <pip3 install graphviz>
 *
 */
"""

filename = "thompson.txt"
with open(filename) as f:
    content = f.readlines()

f = Digraph('finite_state_machine', filename='thompson.gv')
f.attr(rankdir='LR', size='8,5')
f.attr('node', shape='doublecircle')
f.node('9999')
        
f.attr('node', shape='circle')

for line in content:
    edge = line.split(" ")
    f.edge(edge[0], edge[1], label=edge[2])

f.view()

filename = "afd.txt"
with open(filename) as f:
    content = f.readlines()

f = Digraph('finite_state_machine', filename='afd.gv')
f.attr(rankdir='LR', size='8,5')
        
f.attr('node', shape='doublecircle')
for line in content:
    edge = line.split(" ")
    if (len(edge) == 1):
        f.node(edge[0])

f.attr('node', shape='circle')

for line in content:
    edge = line.split(" ")
    if (len(edge) == 3):
        f.edge(edge[0], edge[1], label=edge[2])

f.view()

filename = "afdirect.txt"
with open(filename) as f:
    content = f.readlines()

f = Digraph('finite_state_machine', filename='afdirect.gv')
f.attr(rankdir='LR', size='8,5')

f.attr('node', shape='doublecircle')
for line in content:
    edge = line.split(" ")
    if (len(edge) == 1):
        f.node(edge[0])

f.attr('node', shape='circle')

for line in content:
    edge = line.split(" ")
    if (len(edge) == 3):
        f.edge(edge[0], edge[1], label=edge[2])

f.view()

filename = "afdmini.txt"
with open(filename) as f:
    content = f.readlines()

f = Digraph('finite_state_machine', filename='afdmini.gv')
f.attr(rankdir='LR', size='8,5')

f.attr('node', shape='doublecircle')
for line in content:
    edge = line.split(" ")
    if (len(edge) == 1):
        f.node(edge[0])

f.attr('node', shape='circle')

for line in content:
    edge = line.split(" ")
    if (len(edge) == 3):
        f.edge(edge[0], edge[1], label=edge[2])

f.view()

filename = "afdirectmini.txt"
with open(filename) as f:
    content = f.readlines()

f = Digraph('finite_state_machine', filename='afdirectmini.gv')
f.attr(rankdir='LR', size='8,5')

f.attr('node', shape='doublecircle')
for line in content:
    edge = line.split(" ")
    if (len(edge) == 1):
        f.node(edge[0])

f.attr('node', shape='circle')

for line in content:
    edge = line.split(" ")
    if (len(edge) == 3):
        f.edge(edge[0], edge[1], label=edge[2])

f.view()